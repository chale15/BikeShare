add_candidates(preg_models) %>%
#  add_candidates(lreg_model) %>%
add_candidates(rf_models) %>%
add_candidates(rt_models)
stack_model <- my_stack %>%
blend_predictions() %>%
fit_members()
final_preds3 <- stack_model %>% predict(new_data=test)
random_forest_kaggle_submission <- final_preds3 %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=random_forest_kaggle_submission, file="./Submissions/StackedPreds7.csv", delim=",")
my_stack <- stacks() %>%
#  add_candidates(preg_models) %>%
add_candidates(lreg_model) %>%
add_candidates(rf_models) %>%
add_candidates(rt_models)
stack_model <- my_stack %>%
blend_predictions() %>%
fit_members()
final_preds3 <- stack_model %>% predict(new_data=test)
random_forest_kaggle_submission <- final_preds3 %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=random_forest_kaggle_submission, file="./Submissions/StackedPreds8.csv", delim=",")
#GAM
gam_model <- gen_additive_mod() %>%
set_mode("regression") %>%
set_engine("mgcv")
gam_models <- fit_resamples(gam_workflow,
resamples=folds,
metrics=metric_set(rmse, mae, rsq),
control = tunedModel)
gam_workflow <- workflow() %>%
add_recipe(recipe_2) %>%
add_model(gam_model) %>%
fit(data = train)
gam_models <- fit_resamples(gam_workflow,
resamples=folds,
metrics=metric_set(rmse, mae, rsq),
control = tunedModel)
install.packages('mgcv')
library(mgcv)
#GAM
gam_model <- gen_additive_mod() %>%
set_mode("regression") %>%
set_engine("mgcv")
gam_workflow <- workflow() %>%
add_recipe(recipe_2) %>%
add_model(gam_model) %>%
fit(data = train)
#GAM
gam_model <- gen_additive_mod() %>%
set_mode("regression") %>%
set_engine("mgcv")
gam_workflow <- workflow() %>%
add_recipe(recipe_2) %>%
add_model(gam_model) %>%
fit(data = train)
prepped <- prep(recipe_2)
baked <- bake(prepped, new_data = train)
gam_model1 <- gen_additive_mod(mode = "regression", select = TRUE, data = baked, formula = count~.)
gam_model1 <- gam(mode = "regression", select = TRUE, data = baked, formula = count~.)
View(stack_data)
rf_stack_model <- rand_forest(mtry = tune(),
min_n = tune(),
trees = 500) %>%
set_engine("ranger") %>%
set_mode("regression")
rf_stack_recipe <- recipe(count~., data = stack_data)
rf_stack_workflow <- workflow() %>%
add_recipe(rf_stack_recipe) %>%
add_model(rf_stack_model)
rf_tuning_grid <- grid_regular(mtry(range=c(1, 9)), min_n(), levels = 5)
rf_stack_models <- rf_stack_workflow %>%
tune_grid(resamples=folds,
grid=rf_tuning_grid,
metrics=metric_set(rmse, mae, rsq))
install.packages('h2o')
library(h2o)
# Model
bart_model <- bart() %>%
set_engine("dbarts") %>%
set_mode("regression")
bart_workflow <- workflow() %>%
add_model(bart_model) %>%
add_recipe(recipe_2)
bart_fit <- bart_workflow %>%
fit(data = train)
install.packages('dbarts')
library(dbarts)
bart_fit <- bart_workflow %>%
fit(data = train)
bart_predict <- bart_fit %>% predict(new_data = test)
bart_kaggle_submission <- bart_predict %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=random_forest_kaggle_submission, file="./Submissions/BartPreds1.csv", delim=",")
vroom_write(x=bart_kaggle_submission, file="./Submissions/BartPreds2.csv", delim=",")
#BART Model
bart_model <- bart() %>%
set_engine("dbarts") %>%
set_mode("regression")
recipe_2 <- recipe(count~., data = train) %>%
step_date(datetime, features = "dow") %>%
step_time(datetime, features="hour") %>%
step_rm(datetime, holiday, temp) %>%
step_mutate(working_hour = workingday * datetime_hour) %>%
step_mutate(season=factor(season, labels=c("Spring","Summer","Fall","Winter")),
workingday=factor(workingday),
weather= factor(ifelse(weather==4,3,weather), labels=c("Sunny","Cloudy","Rainy"))) %>%
step_mutate(datetime_hour=factor(datetime_hour),
datetime_dow = factor(datetime_dow))
#BART Model
bart_model <- bart() %>%
set_engine("dbarts") %>%
set_mode("regression")
#BART Model
bart_model <- bart(x.train = matrix(0.0, 0,0)) %>%
set_engine("dbarts") %>%
set_mode("regression")
# Model
bart_model <- bart() %>%
set_engine("dbarts") %>%
set_mode("regression")
library(tidyverse)
library(tidymodels)
library(vroom)
library(rpart)
library(stacks)
library(dbarts)
setwd("~/Desktop/Fall 2024/Stat 348/GitHubRepos/BikeShare")
train <- vroom("train.csv")
test <- vroom("test.csv")
train <- train %>% mutate(count = log(count)) %>% select(-casual, -registered)
recipe_3 <- recipe(count~., data = train) %>%
step_mutate(season=factor(season, labels=c("Spring","Summer","Fall","Winter")),
holiday=factor(holiday),
workingday=factor(workingday),
weather= factor(ifelse(weather==4,3,weather), labels=c("Sunny","Cloudy","Rainy"))) %>%
step_date(datetime, features = "dow") %>%
step_time(datetime, features="hour") %>%
step_mutate(datetime_hour=factor(datetime_hour))
recipe_1 <- recipe(count~., data = train) %>%
step_date(datetime, features = "dow") %>%
step_time(datetime, features="hour") %>%
step_rm(datetime) %>%
step_mutate(working_hour = workingday * datetime_hour) %>%
step_mutate(season=factor(season, labels=c("Spring","Summer","Fall","Winter")),
holiday=factor(holiday),
workingday=factor(workingday),
weather= factor(ifelse(weather==4,3,weather), labels=c("Sunny","Cloudy","Rainy")))%>%
step_mutate(datetime_hour=factor(datetime_hour)) %>%
step_dummy(all_nominal_predictors()) %>%
step_normalize(all_numeric_predictors())
recipe_2 <- recipe(count~., data = train) %>%
step_date(datetime, features = "dow") %>%
step_time(datetime, features="hour") %>%
step_rm(datetime, holiday, temp) %>%
step_mutate(working_hour = workingday * datetime_hour) %>%
step_mutate(season=factor(season, labels=c("Spring","Summer","Fall","Winter")),
workingday=factor(workingday),
weather= factor(ifelse(weather==4,3,weather), labels=c("Sunny","Cloudy","Rainy"))) %>%
step_mutate(datetime_hour=factor(datetime_hour),
datetime_dow = factor(datetime_dow))
# Model
bart_model <- bart() %>%
set_engine("dbarts") %>%
set_mode("regression")
bart_workflow <- workflow() %>%
add_model(bart_model) %>%
add_recipe(recipe_2)
bart_fit <- bart_workflow %>%
fit(data = train)
bart_predict <- bart_fit %>% predict(new_data = test)
bart_workflow <- workflow() %>%
add_model(bart_model) %>%
add_recipe(recipe_2)
bart_models <- bart_workflow %>%
fit_resamples(bart_workflow,
resamples=folds,
metrics= metric_set(rmse, mae, rsq),
control = tunedModel)
#Stacked Model
my_stack <- stacks() %>%
#  add_candidates(preg_models) %>%
add_candidates(lreg_model) %>%
add_candidates(rf_models) %>%
add_candidates(rt_models) %>%
add_candidates(bart_models)
stack_model <- my_stack %>%
blend_predictions() %>%
fit_members()
final_preds3 <- stack_model %>% predict(new_data=test)
#Kaggle Submission
random_forest_kaggle_submission <- final_preds3 %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=random_forest_kaggle_submission, file="./Submissions/StackedPreds10.csv", delim=",")
#Stacked Model
my_stack <- stacks() %>%
#  add_candidates(preg_models) %>%
#  add_candidates(lreg_model) %>%
add_candidates(rf_models) %>%
add_candidates(rt_models) %>%
add_candidates(bart_models)
stack_model <- my_stack %>%
blend_predictions() %>%
fit_members()
final_preds3 <- stack_model %>% predict(new_data=test)
#Kaggle Submission
random_forest_kaggle_submission <- final_preds3 %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=random_forest_kaggle_submission, file="./Submissions/StackedPreds11.csv", delim=",")
#Stacked Model
my_stack <- stacks() %>%
#  add_candidates(preg_models) %>%
add_candidates(lreg_model) %>%
add_candidates(rf_models) %>%
#  add_candidates(rt_models) %>%
add_candidates(bart_models)
stack_model <- my_stack %>%
blend_predictions() %>%
fit_members()
final_preds3 <- stack_model %>% predict(new_data=test)
#Kaggle Submission
random_forest_kaggle_submission <- final_preds3 %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=random_forest_kaggle_submission, file="./Submissions/StackedPreds12.csv", delim=",")
#Stacked Model
my_stack <- stacks() %>%
#  add_candidates(preg_models) %>%
add_candidates(lreg_model) %>%
#  add_candidates(rf_models) %>%
add_candidates(rt_models) %>%
add_candidates(bart_models)
stack_model <- my_stack %>%
blend_predictions() %>%
fit_members()
final_preds4 <- stack_model %>% predict(new_data=test)
#Kaggle Submission
stacking_kaggle_submission <- final_preds4 %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=stacking_kaggle_submission, file="./Submissions/StackedPreds13.csv", delim=",")
#Stacked Model
my_stack <- stacks() %>%
#  add_candidates(preg_models) %>%
#  add_candidates(lreg_model) %>%
add_candidates(rf_models) %>%
#  add_candidates(rt_models) %>%
add_candidates(bart_models)
stack_model <- my_stack %>%
blend_predictions() %>%
fit_members()
final_preds4 <- stack_model %>% predict(new_data=test)
#Kaggle Submission
stacking_kaggle_submission <- final_preds4 %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=stacking_kaggle_submission, file="./Submissions/StackedPreds14.csv", delim=",")
#Stacked Model
my_stack <- stacks() %>%
add_candidates(preg_models) %>%
#  add_candidates(lreg_model) %>%
add_candidates(rf_models) %>%
#  add_candidates(rt_models) %>%
add_candidates(bart_models)
stack_model <- my_stack %>%
blend_predictions() %>%
fit_members()
final_preds4 <- stack_model %>% predict(new_data=test)
#Kaggle Submission
stacking_kaggle_submission <- final_preds4 %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=stacking_kaggle_submission, file="./Submissions/StackedPreds15.csv", delim=",")
#Stacked Model
my_stack <- stacks() %>%
#  add_candidates(preg_models) %>%
add_candidates(lreg_model) %>%
add_candidates(rf_models) %>%
#  add_candidates(rt_models) %>%
add_candidates(bart_models)
stack_model <- my_stack %>%
blend_predictions() %>%
fit_members()
final_preds4 <- stack_model %>% predict(new_data=test)
#Kaggle Submission
stacking_kaggle_submission <- final_preds4 %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=stacking_kaggle_submission, file="./Submissions/StackedPreds16.csv", delim=",")
#Kaggle Submission
stacking_kaggle_submission <- final_preds3 %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=stacking_kaggle_submission, file="./Submissions/StackedPreds17.csv", delim=",")
#Stacked Model
my_stack <- stacks() %>%
#  add_candidates(preg_models) %>%
#  add_candidates(lreg_model) %>%
add_candidates(rf_models) %>%
add_candidates(rt_models) %>%
add_candidates(bart_models)
stack_model <- my_stack %>%
blend_predictions() %>%
fit_members()
final_preds4 <- stack_model %>% predict(new_data=test)
#Kaggle Submission
stacking_kaggle_submission <- final_preds4 %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=stacking_kaggle_submission, file="./Submissions/StackedPreds18.csv", delim=",")
#Stacked Model
my_stack <- stacks() %>%
#  add_candidates(preg_models) %>%
#  add_candidates(lreg_model) %>%
#  add_candidates(rf_models) %>%
add_candidates(rt_models) %>%
add_candidates(bart_models)
stack_model <- my_stack %>%
blend_predictions() %>%
fit_members()
final_preds4 <- stack_model %>% predict(new_data=test)
#Kaggle Submission
stacking_kaggle_submission <- final_preds4 %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=stacking_kaggle_submission, file="./Submissions/StackedPreds19.csv", delim=",")
#Stacked Model
my_stack <- stacks() %>%
add_candidates(preg_models) %>%
#  add_candidates(lreg_model) %>%
add_candidates(rf_models) %>%
#  add_candidates(rt_models) %>%
add_candidates(bart_models)
stack_model <- my_stack %>%
blend_predictions() %>%
fit_members()
final_preds4 <- stack_model %>% predict(new_data=test)
#Kaggle Submission
stacking_kaggle_submission <- final_preds4 %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=stacking_kaggle_submission, file="./Submissions/StackedPreds20.csv", delim=",")
#Stacked Model
my_stack <- stacks() %>%
#  add_candidates(preg_models) %>%
add_candidates(lreg_model) %>%
add_candidates(rf_models) %>%
#  add_candidates(rt_models) %>%
add_candidates(bart_models)
stack_model <- my_stack %>%
blend_predictions() %>%
fit_members()
final_preds4 <- stack_model %>% predict(new_data=test)
#Kaggle Submission
stacking_kaggle_submission <- final_preds4 %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=stacking_kaggle_submission, file="./Submissions/StackedPreds21.csv", delim=",")
#Stacked Model
my_stack <- stacks() %>%
#  add_candidates(preg_models) %>%
add_candidates(lreg_model) %>%
add_candidates(rf_models) %>%
add_candidates(rt_models) %>%
add_candidates(bart_models)
stack_model <- my_stack %>%
blend_predictions() %>%
fit_members()
final_preds4 <- stack_model %>% predict(new_data=test)
#Kaggle Submission
stacking_kaggle_submission <- final_preds4 %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=stacking_kaggle_submission, file="./Submissions/StackedPreds22.csv", delim=",")
#Stacked Model
my_stack <- stacks() %>%
#  add_candidates(preg_models) %>%
add_candidates(lreg_model) %>%
#  add_candidates(rf_models) %>%
add_candidates(rt_models) %>%
add_candidates(bart_models)
stack_model <- my_stack %>%
blend_predictions() %>%
fit_members()
final_preds4 <- stack_model %>% predict(new_data=test)
#Kaggle Submission
stacking_kaggle_submission <- final_preds4 %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=stacking_kaggle_submission, file="./Submissions/StackedPreds23.csv", delim=",")
#Stacked Model
my_stack <- stacks() %>%
#  add_candidates(preg_models) %>%
add_candidates(lreg_model) %>%
add_candidates(rf_models) %>%
#  add_candidates(rt_models) %>%
add_candidates(bart_models)
stack_model <- my_stack %>%
blend_predictions() %>%
fit_members()
final_preds4 <- stack_model %>% predict(new_data=test)
#Kaggle Submission
stacking_kaggle_submission <- final_preds4 %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=stacking_kaggle_submission, file="./Submissions/StackedPreds24.csv", delim=",")
# Model
bart_model <- bart2() %>%
set_engine("dbarts") %>%
set_mode("regression")
# Model
bart_model <- bart2(formula = count~.) %>%
set_engine("dbarts") %>%
set_mode("regression")
# Model
bart_model <- bart2(formula = count~., data = train) %>%
set_engine("dbarts") %>%
set_mode("regression")
bart_workflow <- workflow() %>%
add_model(bart_model) %>%
add_recipe(recipe_2)
bart_fit <- bart_workflow %>%
fit(data = train)
bart_predict <- bart_fit %>% predict(new_data = test)
bart_kaggle_submission <- bart_predict %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=bart_kaggle_submission, file="./Submissions/BartPreds4.csv", delim=",")
# Model
bart_model <- bart2(formula = count~., data = baked) %>%
set_engine("dbarts") %>%
set_mode("regression")
bart_workflow <- workflow() %>%
add_model(bart_model) %>%
add_recipe(recipe_2)
bart_fit <- bart_workflow %>%
fit(data = train)
bart_predict <- bart_fit %>% predict(new_data = test)
bart_kaggle_submission <- bart_predict %>%
bind_cols(., test) %>%
select(datetime, .pred) %>%
rename(count = .pred) %>%
mutate(count=exp(count)) %>%
mutate(datetime=as.character(format(datetime)))
vroom_write(x=bart_kaggle_submission, file="./Submissions/BartPreds5.csv", delim=",")
# Model
bart_model <- bart(formula = count~., data = baked) %>%
set_engine("dbarts") %>%
set_mode("regression")
